<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Pages on Hugo Theme Stack Starter</title>
        <link>https://demo.stack.jimmycai.com/page/</link>
        <description>Recent content in Pages on Hugo Theme Stack Starter</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 20 Jun 2025 00:40:11 +0100</lastBuildDate><atom:link href="https://demo.stack.jimmycai.com/page/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Iptv Checker</title>
        <link>https://demo.stack.jimmycai.com/iptv-checker/</link>
        <pubDate>Fri, 20 Jun 2025 00:40:11 +0100</pubDate>
        
        <guid>https://demo.stack.jimmycai.com/iptv-checker/</guid>
        <description>&lt;h1 id=&#34;this-is-iptv-checker&#34;&gt;this is iptv checker
&lt;/h1&gt;&lt;p&gt;{{ define &amp;ldquo;main&amp;rdquo; }}&lt;/p&gt;
&lt;div class=&#34;container mx-auto max-w-5xl p-6 prose prose-invert&#34;&gt;
  &lt;h1 class=&#34;text-3xl font-bold text-center mb-6&#34;&gt;IPTV M3U Checker&lt;/h1&gt;
  &lt;!-- File &amp; Text Input --&gt;
  &lt;div class=&#34;bg-gray-800 p-6 rounded-lg shadow mb-8&#34;&gt;
    &lt;label class=&#34;block mb-2 text-gray-400&#34;&gt;Upload M3U/M3U8 File&lt;/label&gt;
    &lt;input type=&#34;file&#34; id=&#34;m3u-file&#34; accept=&#34;.m3u,.m3u8&#34; class=&#34;mb-4 block w-full text-sm text-gray-300 file:mr-4 file:border-0 file:bg-indigo-600 file:text-white file:py-2 file:px-4 file:rounded hover:file:bg-indigo-700&#34;/&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;text-center text-sm text-gray-500 my-2&amp;quot;&amp;gt;OR&amp;lt;/div&amp;gt;

&amp;lt;label class=&amp;quot;block mb-2 text-gray-400&amp;quot;&amp;gt;Paste M3U Content&amp;lt;/label&amp;gt;
&amp;lt;textarea id=&amp;quot;m3u-text&amp;quot; rows=&amp;quot;6&amp;quot; class=&amp;quot;w-full bg-gray-900 border border-gray-700 rounded p-3 text-sm mb-4&amp;quot; placeholder=&amp;quot;#EXTM3U&amp;amp;#10;#EXTINF:-1, Channel Name&amp;amp;#10;http://...&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;

&amp;lt;button id=&amp;quot;check-btn&amp;quot; class=&amp;quot;w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded&amp;quot;&amp;gt;Check Channels&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;!-- Results Table --&gt;
  &lt;div id=&#34;results-section&#34; class=&#34;hidden mb-8&#34;&gt;
    &lt;div class=&#34;text-center mb-4&#34;&gt;
      &lt;button id=&#34;select-online-btn&#34; class=&#34;bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded mr-2&#34;&gt;Select Online&lt;/button&gt;
      &lt;button id=&#34;select-all-btn&#34; class=&#34;bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded mr-2&#34;&gt;Select All&lt;/button&gt;
      &lt;button id=&#34;deselect-all-btn&#34; class=&#34;bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded&#34;&gt;Deselect All&lt;/button&gt;
    &lt;/div&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table class=&amp;quot;w-full text-sm text-left text-gray-300 border border-gray-700 rounded overflow-hidden&amp;quot;&amp;gt;
  &amp;lt;thead class=&amp;quot;bg-gray-700 text-gray-400&amp;quot;&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;th class=&amp;quot;p-2&amp;quot;&amp;gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot; id=&amp;quot;select-all-header&amp;quot; /&amp;gt;&amp;lt;/th&amp;gt;
      &amp;lt;th class=&amp;quot;p-2&amp;quot;&amp;gt;Channel Name&amp;lt;/th&amp;gt;
      &amp;lt;th class=&amp;quot;p-2&amp;quot;&amp;gt;Status&amp;lt;/th&amp;gt;
      &amp;lt;th class=&amp;quot;p-2&amp;quot;&amp;gt;URL&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/thead&amp;gt;
  &amp;lt;tbody id=&amp;quot;results-body&amp;quot; class=&amp;quot;divide-y divide-gray-800&amp;quot;&amp;gt;&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;

&amp;lt;div class=&amp;quot;text-center mt-6&amp;quot;&amp;gt;
  &amp;lt;button id=&amp;quot;generate-btn&amp;quot; class=&amp;quot;bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-8 rounded&amp;quot;&amp;gt;Generate New M3U from Selection&amp;lt;/button&amp;gt;
  &amp;lt;p id=&amp;quot;generate-feedback&amp;quot; class=&amp;quot;text-green-400 mt-2 h-6&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;!-- Output Section --&gt;
  &lt;div id=&#34;output-section&#34; class=&#34;hidden mt-8 fade-in&#34;&gt;
    &lt;h2 class=&#34;text-xl font-semibold text-center mb-4&#34;&gt;Your Cleaned M3U Playlist&lt;/h2&gt;
    &lt;textarea id=&#34;output-m3u&#34; rows=&#34;10&#34; readonly class=&#34;w-full bg-gray-900 border border-gray-700 rounded p-3 text-sm mb-4&#34;&gt;&lt;/textarea&gt;
    &lt;div class=&#34;flex flex-wrap justify-center gap-2&#34;&gt;
      &lt;button id=&#34;copy-btn&#34; class=&#34;bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded&#34;&gt;Copy to Clipboard&lt;/button&gt;
      &lt;button id=&#34;download-btn&#34; class=&#34;bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded&#34;&gt;Download .m3u File&lt;/button&gt;
    &lt;/div&gt;
    &lt;p id=&#34;copy-feedback&#34; class=&#34;text-center text-green-400 mt-2 h-4&#34;&gt;&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;!-- Loading Overlay --&gt;
&lt;div id=&#34;loading-overlay&#34; class=&#34;fixed inset-0 bg-gray-900 bg-opacity-95 flex flex-col items-center justify-center z-50 hidden&#34;&gt;
  &lt;div class=&#34;flex flex-col items-center space-y-4&#34;&gt;
    &lt;!-- Spinner --&gt;
    &lt;div class=&#34;animate-spin rounded-full h-12 w-12 border-t-4 border-b-4 border-indigo-500&#34;&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Text --&amp;gt;
&amp;lt;div class=&amp;quot;text-center&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;text-xl font-semibold text-white&amp;quot;&amp;gt;Checking Channels...&amp;lt;/div&amp;gt;
  &amp;lt;div id=&amp;quot;loading-progress&amp;quot; class=&amp;quot;text-lg text-indigo-400 mt-1&amp;quot;&amp;gt;0%&amp;lt;/div&amp;gt;
  &amp;lt;div id=&amp;quot;loading-current&amp;quot; class=&amp;quot;text-sm text-gray-400 mt-1&amp;quot;&amp;gt;Initializing...&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;!-- Progress Bar --&amp;gt;
&amp;lt;div class=&amp;quot;w-64 h-2 bg-gray-800 rounded-full overflow-hidden&amp;quot;&amp;gt;
  &amp;lt;div id=&amp;quot;progress-bar-fill&amp;quot; class=&amp;quot;h-full bg-indigo-500 transition-all duration-300 ease-in-out&amp;quot; style=&amp;quot;width: 0%;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
  .fade-in {
    animation: fadeIn 0.5s ease-in-out forwards;
  }
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
&lt;/style&gt;
&lt;script&gt;
  const m3uFileInput = document.getElementById(&#39;m3u-file&#39;);
  const m3uTextInput = document.getElementById(&#39;m3u-text&#39;);
  const checkBtn = document.getElementById(&#39;check-btn&#39;);
  const resultsSection = document.getElementById(&#39;results-section&#39;);
  const resultsBody = document.getElementById(&#39;results-body&#39;);
  const selectAllHeaderCheckbox = document.getElementById(&#39;select-all-header&#39;);
  const selectOnlineBtn = document.getElementById(&#39;select-online-btn&#39;);
  const selectAllBtn = document.getElementById(&#39;select-all-btn&#39;);
  const deselectAllBtn = document.getElementById(&#39;deselect-all-btn&#39;);
  const generateBtn = document.getElementById(&#39;generate-btn&#39;);
  const generateFeedback = document.getElementById(&#39;generate-feedback&#39;);
  const outputSection = document.getElementById(&#39;output-section&#39;);
  const outputM3u = document.getElementById(&#39;output-m3u&#39;);
  const copyBtn = document.getElementById(&#39;copy-btn&#39;);
  const downloadBtn = document.getElementById(&#39;download-btn&#39;);
  const copyFeedback = document.getElementById(&#39;copy-feedback&#39;);

  const loadingOverlay = document.getElementById(&#39;loading-overlay&#39;);
  const loadingProgress = document.getElementById(&#39;loading-progress&#39;);
  const loadingCurrent = document.getElementById(&#39;loading-current&#39;);
  const progressBarFill = document.getElementById(&#39;progress-bar-fill&#39;);

  let allChannels = [];

  function parseM3u(content) {
    const lines = content.split(&#39;\n&#39;);
    const channels = [];

    for (let i = 0; i &lt; lines.length; i++) {
      const line = lines[i].trim();
      if (line.startsWith(&#39;#EXTINF:&#39;)) {
        const name = line.split(&#39;,&#39;)[1] || &#39;Unknown&#39;;
        const url = lines[i + 1]?.trim();
        if (url?.startsWith(&#39;http&#39;)) {
          channels.push({ name, url, rawLine: line });
          i++;
        }
      }
    }
    return channels;
  }

  async function checkUrlStatus(url) {
    try {
      const controller = new AbortController();
      setTimeout(() =&gt; controller.abort(), 4000);
      await fetch(url, { method: &#39;GET&#39;, mode: &#39;no-cors&#39;, signal: controller.signal });
      return true;
    } catch {
      return false;
    }
  }

  async function startChecking() {
    resultsBody.innerHTML = &#39;&#39;;
    resultsSection.classList.remove(&#39;hidden&#39;);
    outputSection.classList.add(&#39;hidden&#39;);
    generateFeedback.textContent = &#39;&#39;;

    loadingOverlay.classList.remove(&#39;hidden&#39;);
    loadingProgress.textContent = &#39;0%&#39;;
    loadingCurrent.textContent = &#39;Starting...&#39;;
    progressBarFill.style.width = &#39;0%&#39;;

    for (let i = 0; i &lt; allChannels.length; i++) {
      const channel = allChannels[i];
      loadingCurrent.textContent = `Checking: ${channel.name}`;
      const isOnline = await checkUrlStatus(channel.url);
      channel.isOnline = isOnline;

      const percent = Math.floor(((i + 1) / allChannels.length) * 100);
      loadingProgress.textContent = `${percent}%`;
      progressBarFill.style.width = `${percent}%`;

      const row = document.createElement(&#39;tr&#39;);
      row.innerHTML = `
        &lt;td class=&#34;p-2&#34;&gt;&lt;input type=&#34;checkbox&#34; class=&#34;channel-checkbox&#34; data-index=&#34;${i}&#34;/&gt;&lt;/td&gt;
        &lt;td class=&#34;p-2&#34;&gt;${channel.name}&lt;/td&gt;
        &lt;td class=&#34;p-2 ${isOnline ? &#39;text-green-400&#39; : &#39;text-red-400&#39;}&#34;&gt;${isOnline ? &#39;Online&#39; : &#39;Offline&#39;}&lt;/td&gt;
        &lt;td class=&#34;p-2 truncate&#34;&gt;${channel.url}&lt;/td&gt;
      `;
      resultsBody.appendChild(row);
    }

    loadingCurrent.textContent = &#39;Done checking channels.&#39;;
    setTimeout(() =&gt; {
      loadingOverlay.classList.add(&#39;hidden&#39;);
    }, 800);
  }

  function getAllCheckboxes() {
    return document.querySelectorAll(&#39;.channel-checkbox&#39;);
  }

  function getSelectedCheckboxes() {
    return document.querySelectorAll(&#39;.channel-checkbox:checked&#39;);
  }

  checkBtn.addEventListener(&#39;click&#39;, async () =&gt; {
    let content = m3uTextInput.value.trim();

    if (m3uFileInput.files.length &gt; 0) {
      content = await m3uFileInput.files[0].text();
    }

    if (!content) return alert(&#39;Please upload or paste M3U content.&#39;);

    allChannels = parseM3u(content);

    if (allChannels.length === 0) {
      return alert(&#39;No valid channels found.&#39;);
    }

    await startChecking();
  });

  selectAllHeaderCheckbox.addEventListener(&#39;change&#39;, (e) =&gt; {
    getAllCheckboxes().forEach(cb =&gt; cb.checked = e.target.checked);
  });

  selectOnlineBtn.addEventListener(&#39;click&#39;, () =&gt; {
    getAllCheckboxes().forEach(cb =&gt; {
      const index = +cb.dataset.index;
      cb.checked = allChannels[index].isOnline;
    });
  });

  selectAllBtn.addEventListener(&#39;click&#39;, () =&gt; {
    getAllCheckboxes().forEach(cb =&gt; cb.checked = true);
  });

  deselectAllBtn.addEventListener(&#39;click&#39;, () =&gt; {
    getAllCheckboxes().forEach(cb =&gt; cb.checked = false);
  });

  generateBtn.addEventListener(&#39;click&#39;, () =&gt; {
    const selected = getSelectedCheckboxes();
    if (selected.length === 0) {
      alert(&#39;Please select at least one channel.&#39;);
      return;
    }

    let output = &#39;#EXTM3U\n&#39;;
    selected.forEach(cb =&gt; {
      const index = +cb.dataset.index;
      const ch = allChannels[index];
      output += `${ch.rawLine}\n${ch.url}\n`;
    });

    outputM3u.value = output;
    outputSection.classList.remove(&#39;hidden&#39;);
    outputSection.classList.add(&#39;fade-in&#39;);
    generateFeedback.textContent = &#39;🎉 Playlist generated successfully!&#39;;
    setTimeout(() =&gt; generateFeedback.textContent = &#39;&#39;, 3000);
  });

  copyBtn.addEventListener(&#39;click&#39;, () =&gt; {
    outputM3u.select();
    document.execCommand(&#39;copy&#39;);
    copyFeedback.textContent = &#39;Copied to clipboard!&#39;;
    setTimeout(() =&gt; copyFeedback.textContent = &#39;&#39;, 2000);
  });

  downloadBtn.addEventListener(&#39;click&#39;, () =&gt; {
    const blob = new Blob([outputM3u.value], { type: &#39;audio/x-mpegurl&#39; });
    const url = URL.createObjectURL(blob);
    const a = document.createElement(&#39;a&#39;);
    a.href = url;
    a.download = &#39;cleaned_playlist.m3u&#39;;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    copyFeedback.textContent = &#39;File downloaded!&#39;;
    setTimeout(() =&gt; copyFeedback.textContent = &#39;&#39;, 2000);
  });
&lt;/script&gt;
&lt;p&gt;{{ end }}&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://demo.stack.jimmycai.com/archives/</link>
        <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>https://demo.stack.jimmycai.com/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Links</title>
        <link>https://demo.stack.jimmycai.com/links/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://demo.stack.jimmycai.com/links/</guid>
        <description>&lt;p&gt;To use this feature, add &lt;code&gt;links&lt;/code&gt; section to frontmatter.&lt;/p&gt;
&lt;p&gt;This page&amp;rsquo;s frontmatter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub is the world&amp;#39;s largest software development platform.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.com&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://www.typescriptlang.org&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ts-logo-128.jpg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;image&lt;/code&gt; field accepts both local and external images.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Search</title>
        <link>https://demo.stack.jimmycai.com/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://demo.stack.jimmycai.com/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
